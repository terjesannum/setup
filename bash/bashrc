# -*- mode: shell-script; -*-

if [ -r /etc/bashrc ]; then
. /etc/bashrc
fi

if test -z "$SETUP_HOME"; then
    SETUP_HOME=$HOME
fi

add_path() {
    dir=$1
    if [[ :$PATH: =~ :$dir: ]]; then
        PATH="${PATH#$dir:}"        # remove if at start
        PATH="${PATH%:$dir}"        # remove if at end
        PATH="${PATH//:$dir:/:}"    # remove if in middle
    fi
    PATH="$dir:$PATH"               # add to start
}

if [ -r $SETUP_HOME/lib/bash/local.sh ]; then
    . $SETUP_HOME/lib/bash/local.sh
fi

HISTFILESIZE=5000
HISTSIZE=5000

export CLICOLOR=1
export COLORTERM=1
export LSCOLORS=ExFxBxDxCxegedabagacad
alias grep='grep --color=auto'

if test "$(uname -s)" = 'Linux'; then
   alias ls='ls --color=auto'
fi

for dir in \
    $SETUP_HOME/bin \
    /usr/local/opt/gnu-sed/libexec/gnubin \
    /opt/idea/bin \
    /usr/local/opt/python/libexec/bin \
    ; do
    test -d $dir && add_path $dir
done

if test -n "$INSIDE_EMACS"; then
    export PAGER=cat
    if type emacsclient &>/dev/null ; then
        export EDITOR=emacsclient
    fi
    if test -f $SETUP_HOME/lib/bash/github.com/ealias/ealias && type emacsclient &>/dev/null ; then
        . $SETUP_HOME/lib/bash/github.com/ealias/ealias
        ealias eman='man %*'
        ealias essh='ssh-shell %*'
        ealias sussh='sudo-shell %*'
        ealias ff='find-file %* t'
    fi
    if test "$TERM" = "dumb" -a \( -f $SETUP_HOME/.terminfo/d/dumb-emacs-ansi -o -f $SETUP_HOME/.terminfo/64/dumb-emacs-ansi \); then
        export TERM=dumb-emacs-ansi
    fi
    if type kubectl &>/dev/null; then
        export PROMPT_COMMAND="emacsclient -e '(kubectx-update)' &>/dev/null"
    fi
fi

if test $UID -eq 0; then
  prompt_color=31
elif test -n "$GDMSESSION" -o `uname -s` = 'Darwin' || uname -a | grep -q Microsoft; then
  prompt_color=32
else
  prompt_color=36
fi
PS1="\\e[0;${prompt_color}m\\u@\\h\\e[m \\e[0;33m\\w\\e[m\\n\\\$ "

for git_prompt in \
    /Applications/Xcode.app/Contents/Developer/usr/share/git-core/git-prompt.sh \
    /Library/Developer/CommandLineTools/usr/share/git-core/git-prompt.sh \
    /usr/share/git-core/contrib/completion/git-prompt.sh \
    /usr/lib/git-core/git-sh-prompt \
    ; do
    if test -r $git_prompt; then
        GIT_PROMPT=$git_prompt
        break
    fi
done

if test -n "$GIT_PROMPT"; then
  . $GIT_PROMPT
  GIT_PS1_SHOWDIRTYSTATE=1
  GIT_PS1_SHOWSTASHSTATE=1
  GIT_PS1_SHOWUNTRACKEDFILES=1
  GIT_PS1_SHOWUPSTREAM=auto
  PS1="\\e[0;${prompt_color}m\\u@\\h\\e[m \\e[0;33m\\w\$(__git_ps1 \" \\e[${prompt_color}m(%s)\")\\e[m\\n\\\$ "
fi

alias cd..='cd ..'
if test ! -z $INFLUX_HOST; then
    alias influx='influx -host $INFLUX_HOST -database $INFLUX_DATABASE -precision rfc3339'
fi
alias ec=emacsclient

alias docker-rm-all='docker rm -f $(docker ps -a -q)'
alias docker-irm-all='docker rmi $(docker images -a -q)'
alias docker-ip="docker inspect --format '{{ .NetworkSettings.IPAddress }}'"

epoch() {
    date -d @$(echo $1 | cut -c-10)
}

if type shasum &>/dev/null; then
    type sha1sum &>/dev/null || alias sha1sum='shasum -a 1'
    type sha256sum &>/dev/null || alias sha256sum='shasum -a 256'
fi

for dir in \
    /usr/lib/oracle/12.2/client64/lib \
    ; do
    test -d $dir && export LD_LIBRARY_PATH=$dir:$LD_LIBRARY_PATH
done

if test -d $SETUP_HOME/inst/go; then
    add_path $SETUP_HOME/inst/go
fi

if test -d $SETUP_HOME/inst/emacs/bin; then
    add_path $SETUP_HOME/inst/emacs/bin
fi

if type brew &>/dev/null && test -r $(brew --prefix)/share/bash-completion/bash_completion; then
  . $(brew --prefix)/share/bash-completion/bash_completion
fi

if type kubectl &>/dev/null; then
  . <(kubectl completion bash)
  alias k=kubectl
  alias kd='kubectl --namespace default'
  alias ks='kubectl --namespace kube-system'
  alias kn='kubectl --namespace nais'
  alias ki='kubectl --namespace istio-system'
fi

if type kubectx &>/dev/null; then
  . $SETUP_HOME/lib/bash/github.com/kubectx/completion/kubectx.bash
  alias kc=kubectx
fi

if type kubens &>/dev/null; then
  . $SETUP_HOME/lib/bash/github.com/kubectx/completion/kubens.bash
  alias kns=kubens
fi

if type helm &>/dev/null; then
  . <(helm completion bash)
fi

if test -r $GOOGLE_CLOUD_SDK_DIR/path.bash.inc; then
    . $GOOGLE_CLOUD_SDK_DIR/path.bash.inc
    if type _completion_loader &>/dev/null && test -r $GOOGLE_CLOUD_SDK_DIR/completion.bash.inc; then
        . $GOOGLE_CLOUD_SDK_DIR/completion.bash.inc
    fi
fi

if type _completion_loader &>/dev/null && test -r $SETUP_HOME/lib/bash/github.com/complete-alias/bash_completion.sh; then
   . $SETUP_HOME/lib/bash/github.com/complete-alias/bash_completion.sh
   if type kubectl &>/dev/null; then
      complete -F _complete_alias k
      complete -F _complete_alias kd
      complete -F _complete_alias ks
      complete -F _complete_alias kn
      complete -F _complete_alias ki
   fi
   if type kubectx &>/dev/null; then
      complete -F _complete_alias kc
   fi
   if type kubens &>/dev/null; then
      complete -F _complete_alias kns
   fi
fi

if type minikube &>/dev/null; then
   alias minikube-docker-env='eval $(minikube docker-env)'
fi

export LC_CTYPE=en_US.UTF-8
export LC_ALL=en_US.UTF-8
if test -d $SETUP_HOME/perl5/lib/perl5; then
    eval "$(perl -I$SETUP_HOME/perl5/lib/perl5 -Mlocal::lib)"
fi

if test -d /proc; then
    alias pswap="find /proc -maxdepth 2 -path \"/proc/[0-9]*/status\" -readable -exec awk -v FS=\":\" '{process[\$1]=\$2;sub(/^[ \t]+/,\"\",process[\$1]);} END {if(process[\"VmSwap\"] && process[\"VmSwap\"] != \"0 kB\") printf \"%10s %-30s %20s\n\",process[\"Pid\"],process[\"Name\"],process[\"VmSwap\"]}' '{}' \; | awk '{print \$(NF-1),\$0}' | sort -h | cut -d \" \" -f2-"
fi

